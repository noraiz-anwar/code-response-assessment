From 4195c01dad80d50e73519772a2bb6c3145e42ad6 Mon Sep 17 00:00:00 2001
From: Hira Ijaz <hira.ijaz@arbisoft.com>
Date: Mon, 22 Jan 2024 17:52:31 +0500
Subject: [PATCH] Show error on submit after ending exam

---
 openassessment/xblock/submission_mixin.py | 46 ++++++++++++++++-------
 1 file changed, 33 insertions(+), 13 deletions(-)

diff --git a/openassessment/xblock/submission_mixin.py b/openassessment/xblock/submission_mixin.py
index 375a03e5..29847520 100644
--- a/openassessment/xblock/submission_mixin.py
+++ b/openassessment/xblock/submission_mixin.py
@@ -26,7 +26,7 @@ from xblock.core import XBlock
 
 from lms.djangoapps.courseware.models import StudentModule
 from student.models import user_by_anonymous_id
-
+from edx_proctoring.models import ProctoredExamStudentAttempt
 from openassessment.xblock.data_conversion import update_submission_old_format_answer
 from .job_sample_grader.utils import is_design_problem
 from .resolve_dates import DISTANT_FUTURE
@@ -212,6 +212,23 @@ class SubmissionMixin(object):
         workflow = self.get_workflow_info()
         if not workflow:
             student_item_dict = self.get_student_item_dict()
+            student_id = self.get_user_id_from_student_dict(student_item_dict)
+            attempt = ProctoredExamStudentAttempt.objects.get(user__id=student_id,
+                                                              proctored_exam__course_id=student_item_dict[
+                                                                  'course_id'])
+            if attempt and attempt.status == 'submitted':
+                msg = (
+                    u"Attempt already submitted "
+                    u"a response for the user: {student_item}"
+                ).format(student_item=student_item_dict)
+                logger.exception(msg)
+                status_tag = 'EUNKNOWN'
+                status_text = self._(u'Please refresh to submit')
+                return (
+                    False,
+                    status_tag,
+                    status_text
+                )
             try:
                 submission = self.submit_code_response(data, student_item_dict)
             except api.SubmissionRequestError as err:
@@ -399,15 +416,15 @@ class SubmissionMixin(object):
         # celery_task_states.PENDING is an "unknown" state. Celery returns PENDING state for tasks
         # that don't even exist. So we need to handle them appropriately.
         if (
-            current_code_execution_task_state not in celery_task_states.READY_STATES
-            and current_code_execution_task_state != celery_task_states.PENDING
-            or
-            # A precausion against failed task registerations. If a request stays "PENDING" for 10 minutes,
-            # we'll assume it's lost.
-            # TODO: Remove this condition if we do not experience any such loses.
-            current_code_execution_task_state == celery_task_states.PENDING
-            and self.last_code_execution_attempt_date_time is not None
-            and self.last_code_execution_attempt_date_time > (timezone.now() - timedelta(minutes=10))
+                current_code_execution_task_state not in celery_task_states.READY_STATES
+                and current_code_execution_task_state != celery_task_states.PENDING
+                or
+                # A precausion against failed task registerations. If a request stays "PENDING" for 10 minutes,
+                # we'll assume it's lost.
+                # TODO: Remove this condition if we do not experience any such loses.
+                current_code_execution_task_state == celery_task_states.PENDING
+                and self.last_code_execution_attempt_date_time is not None
+                and self.last_code_execution_attempt_date_time > (timezone.now() - timedelta(minutes=10))
         ):
             return True
 
@@ -480,7 +497,8 @@ class SubmissionMixin(object):
         # at once.
         self.revoke_existing_task()
 
-        show_staff_cases = self.show_private_test_case_results and not is_design_problem(self.scope_ids.usage_id, self.display_name)
+        show_staff_cases = self.show_private_test_case_results and not is_design_problem(self.scope_ids.usage_id,
+                                                                                         self.display_name)
 
         self.saved_response = json.dumps(data)
         self.has_saved = True
@@ -552,7 +570,8 @@ class SubmissionMixin(object):
         """
         execution_state = 'none'
         execution_results = {}
-        show_staff_cases = self.show_private_test_case_results and not is_design_problem(self.scope_ids.usage_id, self.display_name)
+        show_staff_cases = self.show_private_test_case_results and not is_design_problem(self.scope_ids.usage_id,
+                                                                                         self.display_name)
 
         if self.is_code_execution_in_progress():
             execution_state = 'running'
@@ -613,7 +632,8 @@ class SubmissionMixin(object):
         if 'descriptions' in data:
             descriptions = data['descriptions']
 
-            if isinstance(descriptions, list) and all([isinstance(description, six.string_types) for description in descriptions]):
+            if isinstance(descriptions, list) and all(
+                    [isinstance(description, six.string_types) for description in descriptions]):
                 try:
                     self.saved_files_descriptions = json.dumps(descriptions)
 
-- 
2.41.0

